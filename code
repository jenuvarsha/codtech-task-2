import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
from google.colab import files
uploaded = files.upload()
file_name = list(uploaded.keys())[0]
data = pd.read_csv(file_name)
print("First few rows of the dataset:")
print(data.head())

# Display basic statistics of the dataset
print("\nDataset description:")
print(data.describe())
print(data.isnull())
print(data.isnull().sum())
X = data[['Open']]
y = data['Close']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = LinearRegression()
model.fit(X_train, y_train)
y_pred = model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)
print(f"Mean Squared Error: {mse}")
print(f"R-squared: {r2}")
plt.figure(figsize=(10, 6))
sns.scatterplot(x=X_test['Open'], y=y_test, color='blue', label='Actual')
sns.lineplot(x=X_test['Open'], y=y_pred, color='red', label='Predicted')
plt.title('Actual vs Predicted Close Prices')
plt.xlabel('Open Price')
plt.ylabel('Close Price')
plt.legend()
plt.show()
plt.figure(figsize=(10, 6))
sns.scatterplot(x=y_test, y=y_pred, color='black')
plt.plot([min(y_test), max(y_test)], [min(y_test), max(y_test)], color='red', lw=2)
plt.title('Actual vs Predicted Values')
plt.xlabel('Actual Close Price')
plt.ylabel('Predicted Close Price')
plt.show()
